// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PictureSpider.Hentaivox;

#nullable disable

namespace PictureSpider.Migrations.DatabaseMigrations
{
    [DbContext(typeof(Database))]
    [Migration("20250519170055_vox8")]
    partial class vox8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PictureSpider.Hentaivox.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("displayId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("displayText")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("followed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("longtext");

                    b.Property<bool>("queued")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PictureSpider.Hentaivox.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("downloaded")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("excluded")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ext")
                        .HasColumnType("longtext");

                    b.Property<string>("fileName")
                        .HasColumnType("longtext");

                    b.Property<int>("index")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<string>("url")
                        .HasColumnType("longtext");

                    b.Property<int?>("workGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("workGroupId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("PictureSpider.Hentaivox.WorkGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("fav")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("fetched")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("readed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("WorkGroups");
                });

            modelBuilder.Entity("PictureSpider.Hentaivox.Work", b =>
                {
                    b.HasOne("PictureSpider.Hentaivox.WorkGroup", "workGroup")
                        .WithMany("works")
                        .HasForeignKey("workGroupId");

                    b.Navigation("workGroup");
                });

            modelBuilder.Entity("PictureSpider.Hentaivox.WorkGroup", b =>
                {
                    b.HasOne("PictureSpider.Hentaivox.User", "user")
                        .WithMany("workGroups")
                        .HasForeignKey("userId");

                    b.Navigation("user");
                });

            modelBuilder.Entity("PictureSpider.Hentaivox.User", b =>
                {
                    b.Navigation("workGroups");
                });

            modelBuilder.Entity("PictureSpider.Hentaivox.WorkGroup", b =>
                {
                    b.Navigation("works");
                });
#pragma warning restore 612, 618
        }
    }
}
