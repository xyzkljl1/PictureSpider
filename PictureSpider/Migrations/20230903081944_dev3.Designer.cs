// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PictureSpider.Hitomi;

#nullable disable

namespace PictureSpider.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20230903081944_dev3")]
    partial class dev3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PictureSpider.Hitomi.Illust", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("excluded")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ext")
                        .HasColumnType("longtext");

                    b.Property<string>("fileName")
                        .HasColumnType("longtext");

                    b.Property<string>("hash")
                        .HasColumnType("longtext");

                    b.Property<int?>("illustGroupId")
                        .HasColumnType("int");

                    b.Property<int>("index")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("illustGroupId");

                    b.ToTable("Illusts");
                });

            modelBuilder.Entity("PictureSpider.Hitomi.IllustGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("fav")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("fetched")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("readed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("title")
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .HasColumnType("varchar(95)");

                    b.HasKey("Id");

                    b.HasIndex("username");

                    b.ToTable("IllustGroups");
                });

            modelBuilder.Entity("PictureSpider.Hitomi.User", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("displayId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("displayText")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("followed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("queued")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("name");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PictureSpider.Hitomi.Illust", b =>
                {
                    b.HasOne("PictureSpider.Hitomi.IllustGroup", "illustGroup")
                        .WithMany("illusts")
                        .HasForeignKey("illustGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("illustGroup");
                });

            modelBuilder.Entity("PictureSpider.Hitomi.IllustGroup", b =>
                {
                    b.HasOne("PictureSpider.Hitomi.User", "user")
                        .WithMany("illustGroups")
                        .HasForeignKey("username");

                    b.Navigation("user");
                });

            modelBuilder.Entity("PictureSpider.Hitomi.IllustGroup", b =>
                {
                    b.Navigation("illusts");
                });

            modelBuilder.Entity("PictureSpider.Hitomi.User", b =>
                {
                    b.Navigation("illustGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
